start = expression+

expression = WS? e:(modernlist / infixlist / atomlist / quote / integer / atom) WS?
  { return e; }

infixlist = OpenInfix es:expression* CloseInfix
  {
    if (es.length % 2 === 1 && es.length >= 3) {
      var symbol = es[1]
        , l      = [es[0], es[2]]
      ;
      for (var i = 3; i < es.length; i += 2) {
        if (es[i] === symbol) {
          l.push(es[i+1]);
        } else {
          break;
        }
      }
      if (l.length === (es.length + 1) / 2) {
        return [symbol].concat(l);
      }
    }
    return ["nfx"].concat(es);
  }

modernlist = a:atom l:atomlist
  { return [a].concat(l); }

atomlist = OpenChar es:expression* CloseChar
  { return es; }

atom = chars:AtomChar+
  { return chars.join(''); }

quote = QuoteChar e:expression
  { return ['quote', e]; }

WS = (SpaceChar / EOLChar / Comment)+
Comment = CommentChar LineChar*
integer = d:[0-9]+ { return parseInt(d.join(''), 10); }

AtomChar = [0-9a-zA-Z_?!+\-=@#$%^&*/.]
LineChar = (!(EOLChar) SourceChar)
EOLChar = [\u000a\u000b\u000c\u000d\u0085\u2028\u2029]
SpaceChar = [\u0009\u0020\u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006]
QuoteChar = "'"
OpenChar = '('
CloseChar = ')'
OpenInfix = '{'
CloseInfix = '}'
CommentChar = ';;'
SourceChar = [\u0000-\uffff]